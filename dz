#!/bin/bash

# ip [id] - Prints out a container's name, IP, and port. If no id provided, prints info for all containers.
function dz.ip() {
    _print_container_info() {
        local container_id
        local container_ports
        local container_ip
        local container_name
        container_id="${1}"

        container_ports=( $(docker port "$container_id" | grep -o "0.0.0.0:.*" | cut -f2 -d:) )
        container_name="$(docker inspect --format "{{ .Name }}" "$container_id" | sed 's/\///')"
        container_ip="$(docker inspect --format "{{range .NetworkSettings.Networks}}{{.IPAddress}}  {{end}}" "$container_id")"
        printf "%-13s %-40s %-20s %-80s\n" "$container_id" "$container_name" "$container_ip" "${container_ports[*]}"
    }

    local container_id
    container_id="$1"
    printf "%-13s %-40s %-20s %-80s\n" 'Container Id' 'Container Name' 'Container IP' 'Container Ports'
    if [ -z "$container_id" ]; then
        local container_id
        docker ps -a --format "{{.ID}}" | while read -r container_id ; do
            _print_container_info  "$container_id"
        done
    else
        _print_container_info  "$container_id"
    fi
}

# sh [id] - Attach a shell to a docker with an id
function dz.sh() {
    if [ -z $2 ]; then
        docker exec -it $1 /bin/bash -c "[ -e /bin/bash ] && /bin/bash || /bin/sh"
    else
        docker exec -u $1 -it $2 /bin/bash -c "[ -e /bin/bash ] && /bin/bash || /bin/sh"
    fi
}

function dz.logs() {
    if [ -z $2 ]; then
        docker logs -fn 0 $1
    else
        docker logs -fn $1 $2
    fi
}

function dz.v() {
    if [ -z $1 ]; then
        docker volume ls -f dangling=true --format '{{ .Mountpoint }}' | sudo xargs -L1 du -sh
    elif [ $1 == "all" ]; then
        docker volume ls --format '{{ .Mountpoint }}' | sudo xargs -L1 du -sh
    else
        docker volume ls -f $1 --format '{{ .Mountpoint }}' | sudo xargs -L1 du -sh
    fi
}

function dz.help() {
    if [ "$(type -t dz.$1)" == "function" ]; then
        declare -f "dz.$1" | sed '1,2d;$d' | sed -e "s/^    //"
    else
        echo "ez docker"
        echo "==== COMMANDS ========="
        echo "dz                        runs 'dz ip' command"
        echo "dz ip [ID]                print a conatiner's name, IP, and port (all containers if blank)"
        echo "dz v [filter]             prints volumes with sizes (dangling if blank, all if 'all')"
        echo "dz sh [USERNAME] <ID>     bash into a container with optional username"
        echo "dz logs [NUM_LINES] <ID>  tail (and follow) a container's logs (0 lines if blank)"
    fi
}

if [ "$(type -t dz.$1)" == "function" ]; then
    "dz.$@"
elif [ "$1" == "-h" ]; then
    dz.help
elif [ -z "$1" ]; then
    dz.ip
fi
